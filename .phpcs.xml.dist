<?xml version="1.0"?>
<ruleset xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	name="Yoast I18n module"
	xsi:noNamespaceSchemaLocation="./vendor/squizlabs/php_codesniffer/phpcs.xsd">

	<description>Yoast I18n module rules for PHP_CodeSniffer</description>

	<!--
	#############################################################################
	COMMAND LINE ARGUMENTS
	https://github.com/squizlabs/PHP_CodeSniffer/wiki/Annotated-ruleset.xml
	#############################################################################
	-->

	<file>.</file>

	<!-- Only check PHP files. -->
	<arg name="extensions" value="php"/>

	<!-- Show progress, show the error codes for each message (source). -->
	<arg value="ps"/>

	<!-- Strip the filepaths down to the relevant bit. -->
	<arg name="basepath" value="./"/>

	<!-- Check up to 8 files simultaneously. -->
	<arg name="parallel" value="8"/>


	<!--
	#############################################################################
	USE THE YoastCS RULESET
	#############################################################################
	-->

	<rule ref="Yoast">
		<!-- Can't be helped, textdomain is passed in dynamically, that's the nature of this module. -->
		<exclude name="WordPress.WP.I18n.NonSingularStringLiteralDomain"/>

		<!-- Temporary exclusion. This needs to be fixed in a major release.
			 While PHP is case-insensitive, the Composer autoload file isn't, so this breaks
			 plugins which include this module, unless the classname is also adjusted in the
			 plugin.
			 See:
			 - https://github.com/Yoast/i18n-module/pull/29
			 - https://github.com/Yoast/i18n-module/pull/49 -->
		<exclude name="PEAR.NamingConventions.ValidClassName.Invalid"/>
	</rule>


	<!--
	#############################################################################
	SNIFF SPECIFIC CONFIGURATION
	#############################################################################
	-->

	<rule ref="Yoast.Files.FileName">
		<properties>
			<!-- Remove the following prefixes from the names of object structures. -->
			<property name="prefixes" type="array">
				<element value="yoast"/>
			</property>
		</properties>
	</rule>

	<!-- Verify that everything in the global namespace is prefixed with a plugin specific prefix. -->
	<rule ref="WordPress.NamingConventions.PrefixAllGlobals">
		<properties>
			<!-- Provide the prefixes to look for. -->
			<property name="prefixes" type="array">
				<element value="yoast_i18n"/>
				<element value="Yoast\WP\I18n"/>
			</property>
		</properties>
	</rule>

</ruleset>
